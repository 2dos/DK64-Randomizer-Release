'Generate vine series with better behavior.'
_F='map'
_E='ids'
_D='points'
_C='z'
_B='y'
_A='x'
import math
vine_series=[{_F:7,_D:[{_A:1786.297,_B:600.5,_C:2100.627},{_A:1471.689,_B:600.5,_C:2100.627}],_E:[9,10,11]},{_F:7,_D:[{_A:915.847,_B:573.5,_C:1910.881},{_A:804.597,_B:610,_C:2241.639}],_E:[24,25,26]},{_F:176,_D:[{_A:1629.996,_B:320.167,_C:1190.991},{_A:2016.762,_B:300,_C:1176.268}],_E:[0,1,2]},{_F:34,_D:[{_A:2690.722,_B:986,_C:1107.726},{_A:3228.038,_B:986,_C:1169.691}],_E:[1,2,3,4]},{_F:48,_D:[{_A:2056.362,_B:490.081,_C:2366.29},{_A:2153.628,_B:471.435,_C:2662.234}],_E:[31,33,34]},{_F:48,_D:[{_A:2519.823,_B:470.453,_C:2780.688},{_A:2270.045,_B:440,_C:3045.1}],_E:[29,30,32]},{_F:30,_D:[{_A:3074.465,_B:1964,_C:3409.648},{_A:3071.741,_B:1962.337,_C:3060.115}],_E:[8,9,10]},{_F:38,_D:[{_A:2491.337,_B:340.591,_C:1072.511},{_A:2216.48,_B:379.958,_C:1453.899}],_E:[19,20,22,23]},{_F:38,_D:[{_A:3113.786,_B:391.4,_C:4220.393},{_A:3380.865,_B:392.297,_C:4262.602}],_E:[14,15,16]},{_F:64,_D:[{_A:304.701,_B:1071.474,_C:518.836},{_A:710.539,_B:1071.5,_C:510}],_E:[3,4,5,6]}]
def generateVineSeries(map_id):
	'Generate vine placements based on point differences.';N='add';M='change';E={M:[],N:[]};O=120;F=240
	for A in vine_series:
		if A[_F]==map_id:
			G=[_A,_B,_C];D={};H=0
			for B in G:D[B]=A[_D][1][B]-A[_D][0][B];H+=D[B]*D[B]
			P=math.sqrt(H);I=[{_A:A[_D][0][_A],_B:A[_D][0][_B],_C:A[_D][0][_C]}];J=max(math.ceil(P/O),len(A[_E])-1)
			for Q in range(J):
				K={}
				for B in G:K[B]=A[_D][0][B]+(Q+1)/J*D[B]
				I.append(K)
			for (L,C) in enumerate(I):
				if L>=len(A[_E]):E[N].append({_A:C[_A],_B:C[_B],_C:C[_C],'id_base':A[_E][0],'id':F});F+=1
				else:E[M].append({_A:C[_A],_B:C[_B],_C:C[_C],'id':A[_E][L]})
	return E